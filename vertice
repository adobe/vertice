#!/bin/bash
#
# Author: Alejandro Sanchez Acosta
#
# Copyright (c) 2018 Adobe Systems Incorporated. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

REGION=us-east-1
OPTIND=1

source config

show_help() {
  USAGE="$(basename "$0") [-h] [-v] -- Manage Jenkins jobs

where:
    -h  show this help text
    -r  rules file (rules/rule)
    -v  verbose"

  echo "$USAGE"
}

USER=$(echo $CONFIG | jq .config | jq .user | tr -d '"')
TOKEN=$(echo $CONFIG | jq .config | jq .token | tr -d '"')
SERVER=$(echo $CONFIG | jq .config | jq .server | tr -d '"')
JENKINS=$(echo $CONFIG | jq .config | jq .jenkins | tr -d '"')
REGION=$(echo $CONFIG | jq .config | jq .region | tr -d '"')
ENV=$(echo $CONFIG | jq .config | jq .env | tr -d '"')

while getopts "h?vr:s:d" opt; do
    case "$opt" in
    h|\?)
        show_help
        exit
        ;;
    v)  VERBOSE=1
        echo "Verbose"
        echo $CONFIG | jq .
        ;;
    s)  SERVER=$OPTARG
        ;;
    d)  DRY=true
        ;;
    r)  RFILE=$OPTARG
        source $RFILE

        rm vertice-$(date +%Y%m%d).log

        for row in $(echo "${RULES}" | jq -r '.rules[] | @base64'); do
            RULE=$(echo ${row} | base64 --decode)
            JENKINS=$(echo $RULE | jq .rule | jq -r .url | sed 's/$SERVER/'"$SERVER"'/g' | sed 's/$REGION/'"$ENV"'/g' | sed 's/$ENV/'"$REGION"'/g')
            PARAMETERS=$(echo $RULE | jq .rule | jq .parameters)
            SLEEP=$(echo $RULE | jq .rule | jq -r .sleep)
            PARAMS=""

            for param in $(echo "${RULE}" | jq -r '.rule' | jq -r '.parameters[] | @base64'); do
              PNAME=$(echo ${param} | base64 --decode | jq -r '. | keys[]')
              PVALUE=$(echo ${param} | base64 --decode | jq -r '. | values[]' | sed 's/$SERVER/'"$SERVER"'/g' | sed 's/$REGION/'"$REGION"'/g' | sed 's/$ENV/'"$ENV"'/g')
              PARAMS=$PARAMS"{\"name\":\"${PNAME}\", \"value\":\"${PVALUE}\"},"
            done

            PARAMS=$(echo ${PARAMS} | rev | cut -c 2- | rev)
            PARAMS=$(echo "["${PARAMS}"]")

            echo "curl -X POST ${JENKINS} --user ${USER}:${TOKEN}  --data-urlencode 'json={\"parameter\":${PARAMS}}'"
            echo "curl -X POST ${JENKINS} --user ${USER}:${TOKEN}  --data-urlencode 'json={\"parameter\":${PARAMS}}'" >> vertice-$(date +%Y%m%d).log
            echo "sleep ${SLEEP}"

            if [[ "$DRY" != true ]]
            then
              echo "Running Job"
              curl -X POST ${JENKINS} --user ${USER}:${TOKEN} --data-urlencode "json={\"parameter\":${PARAMS}}"
              echo "Waiting $SLEEP seconds"
              sleep $SLEEP
            fi
        done
        ;;
    esac
done

shift $((OPTIND-1))
